#!/usr/bin/env bash
# Template orgulhosamente criado por (Shell-Base)

#-----------HEADER-------------------------------------------------------------|
# AUTOR             : Vovolinux <suporte@vovolinux.com.br>
# HOMEPAGE          : https://vovolinux.com.br 
# DATA DE CRIAÇÃO   : 26/04/2020 às 09:58 
# PROGRAMA          : Texto
# VERSÃO            : 1.0.0
# LICENÇA           : MIT - © 2020 - Vovolinux
# PEQUENA DESCRIÇÃO : Operações com textos e strings
#
# CHANGELOG :
#
#------------------------------------------------------------------------------|


#--------------------------------- VARIÁVEIS ---------------------------------->

# Array de opções para busca em 'array_contem()'
# $array() deve ser declarado antes pelo chamador, de forma global
array=()

#------------------------------- FIM-VARIÁVEIS --------------------------------<


#----------------------------------- FUNÇÕES ---------------------------------->

# Repete um caractere N vezes
# $1 = caractere a ser repetido
# $2 = quantidade de repetições
repete()
{
    for i in $(seq 1 $2); do
        printf %b "$1"
    done
}

# Imprime uma linha de separação na tela
# $1 = caractere do separador
# $2 = quantidade de colunas
separa()
{   repete "$1" $2
    printf %b "\n"
}

# Verifica se o array contém o texto procurado
# $array() deve ser declarado antes pelo chamador, de forma global
# $1 = Texto procurado
# $2 = Frase para não encontrado
# Retorno: 0 = encontrou; 1 = não econtrou
array_contem()
{
    # Flag para continuar o script
    for a in "${array[@]}"; do
        if [[ "${a}" == "$1" ]]; then
            return 0
        fi
    done
    return 1
}

# Imprime a data em um formato passado por parametro
# $1 = Formato para a saída da data
date_format(){
    case $1 in
        "ddmmYYYY")
            printf %b "$(date + "%d%m%Y")";;
        "Ymd_HMS")
            printf %b "$(date + "+%Y%m%d_%H%M%S")";;
        "Y-m-d_H:M:S")
            printf %b "$(date + "+%Y%m%d_%H%M%S")";;
        
        *) printf %b "$(date)"
    esac

}

# Imprime um cabeçalho
# $1 = caractere do separador
# $2 = quantidade de colunas
# $3 = Título principal
# $4 = Subtítulo
cabecalho()
{
    cat << EOF
$(separa $1 $2)
$3
$4
$(separa $1 $2)
EOF    
}

#--------------------------------- FIM-FUNÇÕES --------------------------------<
